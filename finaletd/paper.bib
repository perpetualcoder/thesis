@incollection{Brownbridge1985,
year={1985},
booktitle={Functional Programming Languages and Computer Architecture},
volume={201},
series={Lecture Notes in Computer Science},
editor={Jouannaud, Jean-Pierre},
title={Cyclic reference counting for combinator machines},
author={Brownbridge, D.R.},
pages={273-288},
}

@article{Roy:1998,
 author = {Roy, P. and Seshadri, S. and Silberschatz, A. and Sudarshan, S. and Ashwin, S.},
 title = {Garbage collection in object-oriented databases using transactional cyclic reference counting},
 journal = {The VLDB Journal},
 volume = {7},
 number = {3},
 year = {1998},
 pages = {179--193},
 numpages = {15},
 acmid = {765534},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
}

incollection{Brownbridge1985,
year={1985},
booktitle={Functional Programming Languages and Computer Architecture},
volume={201},
series={Lecture Notes in Computer Science},
editor={Jouannaud, Jean-Pierre},
title={Cyclic reference counting for combinator machines},
author={Brownbridge, D.R.},
pages={273-288},
}
@misc{activeon,
 
  title = {{ProActive Programming}},
  howpublished = "\url{http://www.activeeon.com/public_content/ProActiveProgramming.pdf}",
  year = {2008}, 
  
}

@article{x10,
 author = {Charles, Philippe and Grothoff, Christian and Saraswat, Vijay and Donawa, Christopher and Kielstra, Allan and Ebcioglu, Kemal and von Praun, Christoph and Sarkar, Vivek},
 title = {X10: An Object-oriented Approach to Non-uniform Cluster Computing},
 journal = {SIGPLAN Not.},
 issue_date = {October 2005},
 volume = {40},
 number = {10},
 month = oct,
 year = {2005},
 issn = {0362-1340},
 pages = {519--538},
 numpages = {20},
 url = {http://doi.acm.org/10.1145/1103845.1094852},
 doi = {10.1145/1103845.1094852},
 acmid = {1094852},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Java, X10, atomic blocks, clocks, data distribution, multithreading, non-uniform cluster computing (NUCC), partitioned global address space (PGAS), places, productivity, scalability},
}
@inproceedings{Plain95,
 author = {Plainfoss{\'e}, David and Shapiro, Marc},
 title = {A Survey of Distributed Garbage Collection Techniques},
 booktitle = {Proceedings of the International Workshop on Memory Management},
 series = {IWMM '95},
 year = {1995},
 isbn = {3-540-60368-9},
 pages = {211--249},
 numpages = {39},
 url = {http://dl.acm.org/citation.cfm?id=645647.664687},
 acmid = {664687},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
}
@inproceedings{Shapiro92,
 author = {Shapiro, Marc and Dickman, Peter and Plainfoss{\'e}, David},
 title = {Robust, Distributed References and Acyclic Garbage Collection},
 booktitle = {Proceedings of the Eleventh Annual ACM Symposium on Principles of Distributed Computing},
 series = {PODC '92},
 year = {1992},
 isbn = {0-89791-495-3},
 location = {Vancouver, British Columbia, Canada},
 pages = {135--146},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/135419.135448},
 doi = {10.1145/135419.135448},
 acmid = {135448},
 publisher = {ACM},
 address = {New York, NY, USA},
}
@inproceedings{Piquer91,
 author = {Piquer, Jos{\'e} M.},
 title = {Indirect Reference Counting: A Distributed Garbage Collection Algorithm},
 booktitle = {Proceedings on Parallel Architectures and Languages Europe : Volume I: Parallel Architectures and Algorithms: Volume I: Parallel Architectures and Algorithms},
 series = {PARLE '91},
 year = {1991},
 isbn = {3-540-54151-9},
 location = {Eindhoven, The Netherlands},
 pages = {150--165},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=111462.111474},
 acmid = {111474},
 publisher = {Springer-Verlag New York, Inc.},
 address = {New York, NY, USA},
}
@incollection{Bevan87,
year={1987},
isbn={978-3-540-17945-0},
booktitle={PARLE Parallel Architectures and Languages Europe},
volume={259},
series={Lecture Notes in Computer Science},
editor={de Bakker, J.W. and Nijman, A.J. and Treleaven, P.C.},
doi={10.1007/3-540-17945-3_10},
title={Distributed garbage collection using reference counting},
url={http://dx.doi.org/10.1007/3-540-17945-3_10},
publisher={Springer Berlin Heidelberg},
author={Bevan, DI},
pages={176-187},
  
}
article{Roy:1998,
 author = {Roy, P. and Seshadri, S. and Silberschatz, A. and Sudarshan, S. and Ashwin, S.},
 title = {Garbage collection in object-oriented databases using transactional cyclic reference counting},
 journal = {The VLDB Journal},
 volume = {7},
 number = {3},
 year = {1998},
 pages = {179--193},
 numpages = {15},
 acmid = {765534},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
}
@article{APPELSGC,
year={1989},
issn={0920-8542},
journal={The Journal of Supercomputing},
volume={3},
number={3},
doi={10.1007/BF00127826},
title={Vectorized garbage collection},
url={http://dx.doi.org/10.1007/BF00127826},
publisher={Kluwer Academic Publishers},
author={Appel, AndrewW. and Bendiksen, Aage},
pages={151-160},
language={English}
}
@inproceedings{Endo,
 author = {Endo, Toshio and Taura, Kenjiro and Yonezawa, Akinori},
 title = {A Scalable Mark-sweep Garbage Collector on Large-scale Shared-memory Machines},
 booktitle = {Proceedings of the 1997 ACM/IEEE Conference on Supercomputing},
 series = {SC '97},
 year = {1997},
 isbn = {0-89791-985-8},
 location = {San Jose, CA},
 pages = {1--14},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/509593.509641},
 doi = {10.1145/509593.509641},
 acmid = {509641},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dynamic load balancing, garbage collection, parallel algorithm, scalability, shared-memory machine},
} 


@techreport{hugh83,
author = "R. John M. Hughes",
title = "Reference Counting with Circular Structures in Virtual Memory
Applicative Systems",
institution = "Programming Research Group, Oxford",
type = "Internal paper",
year = "1983"
}
@techreport{Butters2007,
author = "Albin M. Butters",
title = "Total cost of ownership: A comparison of C/C++ and Java",
institution = "Evans Data Corporation",
type = "Technical Report",
year = "2007"
}

@article{hugh82a,
title = "A Semi-Incremental Garbage Collection Algorithm",
author = "R. John M. Hughes",
journal = SPE,
publisher = Wiley,
year = 1982,
month = Nov,
volume = 12,
number = 11,
pages = "1081--1082",
doi={10.1002/spe.4380121108}
}
@inproceedings{BaconUTGC,
 author = {Bacon, David F. and Cheng, Perry and Rajan, V. T.},
 title = {A Unified Theory of Garbage Collection},
 booktitle = {Proceedings of the 19th Annual ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA '04},
 year = {2004},
 isbn = {1-58113-831-8},
 location = {Vancouver, BC, Canada},
 pages = {50--68},
 numpages = {19},
 url = {http://doi.acm.org/10.1145/1028976.1028982},
 doi = {10.1145/1028976.1028982},
 acmid = {1028982},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {graph algorithms, mark-and-sweep, reference counting, tracing},
} 
@inproceedings{Tene,
 author = {Tene, Gil and Iyengar, Balaji and Wolf, Michael},
 title = {C4: The Continuously Concurrent Compacting Collector},
 booktitle = {Proceedings of the International Symposium on Memory Management},
 series = {ISMM '11},
 year = {2011},
 isbn = {978-1-4503-0263-0},
 location = {San Jose, California, USA},
 pages = {79--88},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1993478.1993491},
 doi = {10.1145/1993478.1993491},
 acmid = {1993491},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrent, garbage collection, genera- tional, linux, pauseless, read barrier, virtual memory},
} 
@techreport{Vengerov,
 author = {Vengerov, David},
 title = {Modeling, Analysis and Throughput Optimization of a Generational Garbage Collector},
 year = {2009},
 source = {SMLI TR-2009-179},
 publisher = {Sun Microsystems, Inc.},
 address = {Mountain View, CA, USA},
} 
@INPROCEEDINGS{Veiga05, 
author={Veiga, L. and Ferreira, P.}, 
booktitle={Parallel and Distributed Processing Symposium, 2005. Proceedings. 19th IEEE International}, 
title={Asynchronous Complete Distributed Garbage Collection}, 
year={2005}, 
month={April}, 
pages={24a-24a}, 
keywords={backtracking;distributed algorithms;mobile agents;storage management;DGC algorithms;OBIWAN platform;Rotor free source Microsoft .Net version;asynchronous complete distributed garbage collection;backtracking;central server;distributed tracing phases;global counters;mobile agents;object replication;remote invocation;synchronization;Algorithm design and analysis;Counting circuits;Data structures;Degradation;Detection algorithms;Detectors;Memory management;Mobile agents;Scalability;Yarn}, 
doi={10.1109/IPDPS.2005.113},}
@incollection{wang,
year={2006},
isbn={978-3-540-33809-3},
booktitle={Advances in Grid and Pervasive Computing},
volume={3947},
series={Lecture Notes in Computer Science},
editor={Chung, Yeh-Ching and Moreira, Jos√©E.},
doi={10.1007/11745693_36},
title={Distributed Garbage Collection for Mobile Actor Systems: The Pseudo Root Approach},
url={http://dx.doi.org/10.1007/11745693_36},
publisher={Springer Berlin Heidelberg},
author={Wang, Wei-Jen and Varela, CarlosA.},
pages={360-372},
language={English}
}
@inproceedings{hugh85,
 author = {Hughes, John},
 title = {A Distributed Garbage Collection Algorithm},
 booktitle = {Proc. Of a Conference on Functional Programming Languages and Computer Architecture},
 year = {1985},
 isbn = {3-387-15975-4},
 location = {Nancy, France},
 pages = {256--272},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=5280.5296},
 acmid = {5296},
 publisher = {Springer-Verlag New York, Inc.},
 address = {New York, NY, USA},
} 


@techreport{hugh87,
author = "R. John M. Hughes",
title = "Managing Reduction Graphs with Reference Counts",
institution = "University of Glasgow",
type = "Departmental Research Report",
number = "CSC/87/R2",
month = mar,
year = "1987",
comment = {Based on \cite{bobr80}. Suitable for referentially
transparent languages}
}

@phdthesis{hugh91,
author = "Simon Hughes",
title = "Static Analysis of Store Use in Functional Programs",
school = "Imperial College, University of London",
year = 1991
}


@MASTERSTHESIS{Salkild1987,
  AUTHOR =       {Salkild, J.D.},
  TITLE =        {Implementation and Analysis of two Reference Counting Algorithms},
  SCHOOL =       {University College},
  YEAR =         {1987},
  type =         {Master Thesis},
  address =      {London},
}

@UNPUBLISHED{Hughes1987,
  AUTHOR =       {Hughes, R.J.M.},
  TITLE =        {Managing reduction graphs with reference counts},
  NOTE =         {Departmental Research Report CSC/87/R2},
  year =         {1987},
  month =        {March},
  source =       {University of Glasgow},
}

@book{Pepels1988,
  title={A Cyclic Reference Counting Algorithm and Its Proof},
  author={Pepels, E.J.H. and Plasmeijer, M.J. and van Eekelen, C.J.D. and Eekelen, M.C.J.D.},
  series={Internal report 88-10},
  year={1988},
  publisher={Department of Informatics, Faculty of Science, University of Nijmegen},
}

@article{Axford1990,
author = {Axford, T. H.},
title = {Reference Counting of Cyclic Graphs for Functional Programs},
volume = {33},
number = {5},
pages = {466-470},
year = {1990},
abstract ={A simple method of reference counting applicable to graphs of functional language programs is described. The graph contains strong and weak pointers, but only the strong pointers are counted in the reference counts and by the graph deletion algorithms.It is shown that graphs of functional programs can be constructed in such a way that the sub-graphs got by removing all weak pointers is connected and acyclic. The weak pointers are used only for those recursive references which create cycles in an otherwise acyclic graph. Explicit recursive definitions of functions and data structures may be represented in the graph.The usual graph reduction rules can be implemented so that they do not destroy the required properties of the graph: the sub-graph of strong pointers always remains connected and acyclic. Thus, simple reference counting can be used safely with cyclic graphs of functional programsThis method of storage management has the advantage that is incurs little overhead in either storage space or execution time of beta reduction. Nor is there any excessive increase in the complexity of the algorithm needed for graph reduction. It is less suitable, however, for combinator and supercombinator reduction.},
journal = {The Computer Journal}
}

@article{Friedman1979,
  author    = {Daniel P. Friedman and
               David S. Wise},
  title     = {Reference Counting Can Manage the Circular Environments
               of Mutual Recursion},
  journal   = {Inf. Process. Lett.},
  volume    = {8},
  number    = {1},
  year      = {1979},
  pages     = {41-45},
}

@book{Jones1996,
 author = {Jones, Richard and Lins, Rafael},
 title = {Garbage collection: algorithms for automatic dynamic memory management},
 year = {1996},
 isbn = {0-471-94148-4},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
}

@book{Jones2011,
 author = {Jones, Richard and Hosking, Antony and Moss, Eliot},
 title = {The Garbage Collection Handbook: The Art of Automatic Memory Management},
 year = {2011},
 isbn = {1420082795, 9781420082791},
 edition = {1st},
 publisher = {Chapman \& Hall/CRC},
}


@incollection{Lins2006,
year={2006},
booktitle={Graph Transformations},
volume={4178},
series={Lecture Notes in Computer Science},
editor={Corradini, Andrea and Ehrig, Hartmut and Montanari, Ugo and Ribeiro, Leila and Rozenberg, Grzegorz},
title={New Algorithms and Applications of Cyclic Reference Counting},
keywords={cyclic graphs; reference counting; webpage management; process management},
author={Lins, Rafael Dueire},
pages={15-29},
}

@article{Lins2008,
title = "Cyclic reference counting",
journal = "Inf. Process. Lett.",
volume = "109",
number = "1",
pages = "71 - 78",
year = "2008",
note = "",
author = "Rafael Dueire Lins",
}

@article{Abdullahi1998,
 author = {Abdullahi, Saleh E. and Ringwood, Graem A.},
 title = {Garbage collecting the Internet: a survey of distributed garbage collection},
 journal = {ACM Comput. Surv.},
 volume = {30},
 number = {3},
 year = {1998},
 pages = {330--373},
 numpages = {44},
 keywords = {automatic storage reclamation, distributed, distributed file systems, distributed memories, distributed object-oriented management, memory management, network communication, object-oriented databases, reference counting},
}

@article{Paz2007,
 author = {Paz, Harel and Bacon, David F. and Kolodner, Elliot K. and Petrank, Erez and Rajan, V. T.},
 title = {An efficient on-the-fly cycle collection},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {29},
 number = {4},
 year = {2007},
 articleno = {20},
 keywords = {Programming languages, concurrent cycle collection, garbage collection, memory management, reference counting, runtime systems},
}

@inproceedings{Plainfosse1995,
 author = {Plainfoss{\'e}, David and Shapiro, Marc},
 title = {A Survey of Distributed Garbage Collection Techniques},
 booktitle = {Proceedings of the International Workshop on Memory Management (IWMM)},
 year = {1995},
 pages = {211--249},
 numpages = {39},
}

@MISC{Chase1987,
    author = {David R. Chase},
    title = {Brief Survey of Garbage Collection Algorithms},
    year = {1987},
}

@inproceedings{Wilson1992,
 author = {Wilson, Paul R.},
 title = {Uniprocessor Garbage Collection Techniques},
 booktitle = {IWMM},
 year = {1992},
 pages = {1--42},
 numpages = {42},
}

@inproceedings{Bacon2001,
 author = {Bacon, David F. and Rajan, V. T.},
 title = {Concurrent Cycle Collection in Reference Counted Systems},
 booktitle = {ECOOP},
 year = {2001},
 pages = {207--235},
 numpages = {29},
}

@article{Collins1960,
 author = {Collins, George E.},
 title = {A method for overlapping and erasure of lists},
 journal = {Commun. ACM},
 volume = {3},
 number = {12},
 year = {1960},
 pages = {655--657},
 numpages = {3},
}

@article{McCarthy1960,
 author = {McCarthy, John},
 title = {Recursive functions of symbolic expressions and their computation by machine, Part I},
 journal = {Commun. ACM},
 volume = {3},
 number = {4},
 year = {1960},
 pages = {184--195},
 numpages = {12},
}
@inproceedings{sans93,
title = "Generational Garbage Collection for {H}askell",
author = "Patrick M. Sansom and Peyton Jones, Simon L. ",
doi={10.1145/165180.165195},
pages={106--116},
URL = "ftp://ftp.dcs.gla.ac.uk/pub/glasgow-fp/papers/gen-gc-for-haskell.ps.Z"
}
@article{Appel89,
  author    = {Andrew W. Appel},
  title     = {Simple Generational Garbage Collection and Fast Allocation},
  journal   = {Softw., Pract. Exper.},
  year      = {1989},
  volume    = {19},
  number    = {2},
  pages     = {171--183},
  url       = {http://dx.doi.org/10.1002/spe.4380190206},
  doi       = {10.1002/spe.4380190206},
  timestamp = {Sun, 12 Oct 2014 21:35:46 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/spe/Appel89},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}
@phdthesis{zorn89,
author = "Zorn, Benjamin G.",
title = "Comparative Performance Evaluation of Garbage Collection Algorithms",
school = "UCB", 
note = "Technical Report UCB/CSD 89/544",
URL = "ftp://tr-ftp.cs.berkeley.edu/pub/tech-reports/csd/csd-89-544/",
month = mar,
year = 1989,
comment = "Reduces read barrier overhead by using knowledge of special
cases. Overheads of the order of 20 percent.",
abstract = "This thesis shows that object-level, trace-driven
simulation can facilitate evaluation of language runtime systems
and reaches new conclusions about the relative performance of
important garbage collection algorithms. In particular, I reach
the unexpected conclusion that mark-and-sweep garbage collection,
when augmented with generations, shows comparable CPU performance
and much better reference locality than the more widely used
copying algorithms. In the past, evaluation of garbage collection
algorithms has been limited by the high cost of implementing the
algorithms. Substantially different algorithms have rarely been
compared in a systematic way.
With the availability of high-performance, low-cost workstations,
trace-driven performance evaluation of these algorithms is now
economical. This thesis describes MARS, a runtime system
simulator that is driven by operations on program objects, and
not memory addresses. MARS has been attached to a commercial
Common Lisp system and eight large Lisp applications are used in
the thesis as test programs. To illustrate the advantages of the
object-level tracing technique used by MARS, this thesis compares
the relative performance of stop-and-copy, incremental, and mark-
and-sweep collection algorithms, all organized with multiple
generations. The comparative evaluation is based on several
metrics: CPU overhead, reference locality, and interactive
availability.
Mark-and-sweep collection shows slightly higher CPU overhead than
stop-and-copy ability (5 percent), but requires significantly less
physical memory to achieve the same page fault rate (30-40 percent).
Incremental collection has very good interactive availability,
but implementing the read barrier on stock hardware incurs a
substantial CPU overhead (30-60 percent). In the future, I will use MARS
to investigate other performance aspects of sophisticated runtime
systems."
}
@inproceedings{fode81,
author = "John K. Foderaro and Richard J. Fateman",
title = "Characterization of {VAX} {M}acsyma",
booktitle = "1981 {ACM} Symposium on Symbolic and Algebraic Computation",
address ="Berkeley, CA",
year = 1981,
pages = "14--19",
publisher = "ACM",
doi={10.1145/800206.806364},
comment = {By the early 1980s Lisp programs spending 25--40 percent of their time marking and
sweeping, and users were waiting an average of 4.5s every 79s.}
}
@article{cheney,
author = " C. J. Cheney",
title = "A Non-Recursive List Compacting Algorithm",
journal = "CACM",
publisher = "ACM",
volume = 13,
number = 11,
pages = "677--8",
month = nov,
year = 1970,
doi={10.1145/362790.362798},
profiel = "CESV",
abstract = {Breadth-first non-recursive Copying GC.
Avoids use of mark bits by examining pointers to see
which semi-space they refer to.}
}
@article{feni,
author = "Robert R. Fenichel and Jerome C. Yochelson",
title = "A {L}isp Garbage Collector for Virtual Memory Computer Systems",
journal = "CACM",
publisher = "ACM",
volume = 12,
number = 11,
month = nov,
year = 1969,
pages = "611--612",
doi={10.1145/363269.363280},
comment = {The original copying (2 semi-space) garbage collector.
A variant of Minsky's 1963 algorithm (mins63).  }
}
@article{dijkstra,
 author = {Dijkstra, Edsger W. and Lamport, Leslie and Martin, A. J. and Scholten, C. S. and Steffens, E. F. M.},
 title = {On-the-fly Garbage Collection: An Exercise in Cooperation},
 journal = {Commun. ACM},
 issue_date = {Nov. 1978},
 volume = {21},
 number = {11},
 month = nov,
 year = {1978},
 issn = {0001-0782},
 pages = {966--975},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/359642.359655},
 doi = {10.1145/359642.359655},
 acmid = {359655},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cooperation bet. sequential processes w/ minimized mutual ex, fine-grained interleaving, garbage collection, multiprocessing, program correctness for multiprogramming tasks},
}
@article{haddon,
author = {Haddon, B. K. and Waite, W. M.}, 
title = {A Compaction Procedure for Variable-Length Storage Elements},
volume = {10}, 
number = {2}, 
pages = {162-165}, 
year = {1967}, 
doi = {10.1093/comjnl/10.2.162}, 
abstract ={When a dynamic storage allocation scheme requires variable-length elements, an element of a given length may be requested when no free element large enough is available. This can happen even though the total free space is more than adequate to fulfil the request. In such a situation the program will fail unless some method is at hand for forming the available space into a single element large enough to satisfy the request. We present a procedure for compacting the store such that all of the free space forms a single element.}, 
URL = {http://comjnl.oxfordjournals.org/content/10/2/162.abstract}, 
eprint = {http://comjnl.oxfordjournals.org/content/10/2/162.full.pdf+html}, 
journal = {The Computer Journal} 
}
@article{Levanoni2006,
 author = {Levanoni, Yossi and Petrank, Erez},
 title = {An on-the-fly reference-counting garbage collector for java},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {28},
 number = {1},
 year = {2006},
 pages = {1--69},
 numpages = {69},
 keywords = {Programming languages, garbage collection, memory management, reference-counting},
}

@article{McBeth1963,
 author = {McBeth, J. Harold},
 title = {Letters to the editor: on the reference counter method},
 journal = {Commun. ACM},
 volume = {6},
 number = {9},
 year = {1963},
 pages = {575},
}

@article{Bobrow1980,
 author = {Bobrow, Daniel G.},
 title = {Managing Reentrant Structures Using Reference Counts},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {2},
 number = {3},
 year = {1980},
 pages = {269--273},
 numpages = {5},
}

@inproceedings{Caromel2007,
 author = {Caromel, Denis and Chazarain, Guillaume and Henrio, Ludovic},
 title = {Garbage collecting the grid: a complete DGC for activities},
 booktitle = {Proceedings of the ACM/IFIP/USENIX 2007 International Conference on Middleware (Middleware)},
 year = {2007},
 location = {Newport Beach, California},
 pages = {164--183},
 numpages = {20},
 keywords = {cycle detection, distributed garbage collection, grid computing},
}

@article{Cohen1967,
year={1967},
journal={BIT Numerical Mathematics},
volume={7},
number={1},
title={Remarks on garbage collection using a two-level storage},
publisher={Kluwer Academic Publishers},
keywords={Storage administration; compiler; list},
author={Cohen, Jacques and Trilling, Laurent},
pages={22-30},
language={English},
}

@incollection{Bevan1987,
year={1987},
booktitle={PARLE Parallel Architectures and Languages Europe},
volume={259},
series={Lecture Notes in Computer Science},
editor={Bakker, J.W. and Nijman, A.J. and Treleaven, P.C.},
title={Distributed garbage collection using reference counting},
author={Bevan, DI},
pages={176-187}
}

@inproceedings{Shapiro1999,
 author = {Shapiro, Marc and Fessant, Fabrice Le and Ferreira, Paulo},
 title = {Recent Advances in Distributed Garbage Collection},
 booktitle = {Advances in Distributed Systems, Advanced Distributed Computing: From Algorithms to Systems},
 year = {1999},
 pages = {104--126},
 numpages = {23},
}

@article{Kafura1995,
 author = {Kafura, Dennis and Mukherji, Manibrata and Washabaugh, Douglas M.},
 title = {Concurrent and Distributed Garbage Collection of Active Objects},
 journal = {IEEE Trans. Parallel Distrib. Syst.},
 volume = {6},
 number = {4},
 year = {1995},
 pages = {337--350},
 numpages = {14},
}

@article{LeFessant1998,
 author = {Le Fessant, Fabrice and Piumarta, Ian and Shapiro, Marc},
 title = {An implementation of complete, asynchronous, distributed garbage collection},
 journal = {SIGPLAN Not.},
 volume = {33},
 number = {5},
 year = {1998},
 pages = {152--161},
 numpages = {10},
 keywords = {distributed object systems, garbage collection, reference tracking, storage management},
}

@inproceedings{Zigman2000,
 author = {Zigman, John N. and Blackburn, Stephen and Moss, J. Eliot B.},
 title = {TMOS: A Transactional Garbage Collector},
 booktitle = {Revised Papers from the 9th International Workshop on Persistent Object Systems(POS)},
 year = {2001},
 pages = {138--156},
 numpages = {19},
}

@article{Blackburn2001,
 author = {Blackburn, Stephen M. and Hudson, Richard L. and Morrison, Ron and Moss, J. Eliot B. and Munro, David S. and Zigman, John},
 title = {Starting with termination: a methodology for building distributed garbage collection algorithms},
 journal = {Aust. Comput. Sci. Commun.},
 volume = {23},
 number = {1},
 year = {2001},
 pages = {20--28},
 numpages = {9},
}

@inproceedings{McGachey2008,
 author = {McGachey, Phil and Adl-Tabatabai, Ali-Reza and Hudson, Richard L. and Menon, Vijay and Saha, Bratin and Shpeisman, Tatiana},
 title = {Concurrent GC leveraging transactional memory},
 booktitle = {PPoPP},
 year = {2008},
 location = {Salt Lake City, UT, USA},
 pages = {217--226},
 numpages = {10},
 keywords = {compiler optimizations, concurrent garbage collection, strong atomicity, transactional integrity, transactional memory, virtual machines},
}

@article{Huelsbergen1998,
 author = {Huelsbergen, Lorenz and Winterbottom, Phil},
 title = {Very concurrent mark-\&-sweep garbage collection without fine-grain synchronization},
 journal = {SIGPLAN Not.},
 volume = {34},
 number = {3},
 year = {1998},
 pages = {166--175},
 numpages = {10},
}

@article{Derbyshire1990,
 author = {Derbyshire, Margaret H.},
 title = {Mark scan garbage collection on a distributed architecture},
 journal = {Lisp Symb. Comput.},
 volume = {3},
 number = {2},
 year = {1990},
 pages = {135--170},
 numpages = {36},
}

@article{Barabash2005,
 author = {Barabash, Katherine and Ben-Yitzhak, Ori and Goft, Irit and Kolodner, Elliot K. and Leikehman, Victor and Ossia, Yoav and Owshanko, Avi and Petrank, Erez},
 title = {A parallel, incremental, mostly concurrent garbage collector for servers},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {27},
 number = {6},
 year = {2005},
 pages = {1097--1146},
 numpages = {50},
 keywords = {Garbage collection, JVM, concurrent garbage collection},
}

@article{Pizlo2008,
 author = {Pizlo, Filip and Petrank, Erez and Steensgaard, Bjarne},
 title = {A study of concurrent real-time garbage collectors},
 journal = {SIGPLAN Not.},
 volume = {43},
 number = {6},
 year = {2008},
 pages = {33--44},
 numpages = {12},
 keywords = {concurrent garbage collection, garbage collection, lock-free computation, memory management, real-time},
}

@inproceedings{Maheshwari1997,
 author = {Maheshwari, Umesh and Liskov, Barbara},
 title = {Collecting distributed garbage cycles by back tracing},
 booktitle = {Proceedings of the sixteenth annual ACM symposium on Principles of distributed computing (PODC)},
 year = {1997},
 location = {Santa Barbara, California, USA},
 pages = {239--248},
 numpages = {10},
}

@inproceedings{Rodrigues1998,
 author = {Rodrigues, Helena and Jones, Richard},
 title = {Cyclic Distributed Garbage Collection with Group Merger},
 booktitle = {Proceedings of the 12th European Conference on Object-Oriented Programming (ECOOP)},
 year = {1998},
 pages = {260--284},
 numpages = {25},
}

@misc{bejar1996,
  author = {Arturo Bejar},
  title = {The {Electric Communities} Distributed Garbage Collector},
  year = 1996,
  note = {{\tt http://www.crockford.com/ec/dgc.html}},
  url = "http://www.crockford.com/ec/dgc.html",
}

@inproceedings{Ryu2003,
 author = {Ryu, Sung-Wook and Im, Eul Gyu and Neuman, B. Clifford},
 title = {Distributed Garbage Collection by Timeouts and Backward Inquiry},
 booktitle = {Proceedings of the 27th Annual International Conference on Computer Software and Applications (COMPSAC)},
 year = {2003},
 pages = {426--432},
 keywords = {Distributed Garbage Collection, Distributedobjects, Cyclic Garbage, Timeouts, Back-Tracing},
}

@MISC{terracota,
  note = {{\tt http://terracotta.org/documentation/}},
  source = {http://terracotta.org/documentation/bigmemorymax/best-practices},
}

@inproceedings{Veiga2005,
 author = {Veiga, Luis and Ferreira, Paulo},
 title = {Asynchronous Complete Distributed Garbage Collection},
 booktitle = {IPDPS},
 year = {2005},
 pages = {24.1--24.10},
}

@inproceedings{Wang2006,
 author = {Wang, Wei-Jen and Varela, Carlos A.},
 title = {Distributed garbage collection for mobile actor systems: the pseudo root approach},
 booktitle = {Proceedings of the First international conference on Advances in Grid and Pervasive Computing (GPC)},
 year = {2006},
 location = {Taichung, Taiwan},
 pages = {360--372},
 numpages = {13},
}
@inproceedings{Liskov,
 author = {Liskov, Barbara and Ladin, Rivka},
 title = {Highly Available Distributed Services and Fault-tolerant Distributed Garbage Collection},
 booktitle = {Proceedings of the Fifth Annual ACM Symposium on Principles of Distributed Computing},
 series = {PODC '86},
 year = {1986},
 isbn = {0-89791-198-9},
 location = {Calgary, Alberta, Canada},
 pages = {29--39},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/10590.10593},
 doi = {10.1145/10590.10593},
 acmid = {10593},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{maas2015trash,
	title={Trash day: Coordinating garbage collection in distributed systems},
	author={Maas, Martin and Harris, Tim and Asanovi{\'c}, Krste and Kubiatowicz, John},
	booktitle={15th Workshop on Hot Topics in Operating Systems (HotOS XV)},
	year={2015}
}
@inproceedings{gog2015broom,
	title={Broom: Sweeping out garbage collection from big data systems},
	author={Gog, Ionel and Giceva, Jana and Schwarzkopf, Malte and Vaswani, Kapil and Vytiniotis, Dimitrios and Ramalingam, Ganesan and Costa, Manuel and Murray, Derek G and Hand, Steven and Isard, Michael},
	booktitle={15th Workshop on Hot Topics in Operating Systems (HotOS XV)},
	year={2015}
}
@article{rcfail,
	author = {McBeth, J. Harold},
	title = {Letters to the Editor: On the Reference Counter Method},
	journal = {Commun. ACM},
	issue_date = {Sept. 1963},
	volume = {6},
	number = {9},
	month = sep,
	year = {1963},
	issn = {0001-0782},
	pages = {575--},
	url = {http://doi.acm.org/10.1145/367593.367649},
	doi = {10.1145/367593.367649},
	acmid = {367649},
	publisher = {ACM},
	address = {New York, NY, USA},
} 
@INPROCEEDINGS{richer, 
	author={Richer, N. and Shapiro, M.}, 
	booktitle={POS}, 
	title={The memory behavior of WWW, or the WWW considered as a persistent store.}, 
	year={2000}, 
	pages={161-176},}
@inproceedings{Hudak:1982,
	author = {Hudak, Paul and Keller, Robert M.},
	title = {Garbage Collection and Task Deletion in Distributed Applicative Processing Systems},
	booktitle = {Proceedings of the 1982 ACM Symposium on LISP and Functional Programming},
	series = {LFP '82},
	year = {1982},
	isbn = {0-89791-082-6},
	location = {Pittsburgh, Pennsylvania, USA},
	pages = {168--178},
	numpages = {11},
	url = {http://doi.acm.org/10.1145/800068.802147},
	doi = {10.1145/800068.802147},
	acmid = {802147},
	publisher = {ACM},
	address = {New York, NY, USA},
} 
@inproceedings{LeFessant,
	author = {Le Fessant, Fabrice and Piumarta, Ian and Shapiro, Marc},
	title = {An Implementation of Complete, Asynchronous, Distributed Garbage Collection},
	booktitle = {Proceedings of the ACM SIGPLAN 1998 Conference on Programming Language Design and Implementation},
	series = {PLDI '98},
	year = {1998},
	isbn = {0-89791-987-4},
	location = {Montreal, Quebec, Canada},
	pages = {152--161},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/277650.277715},
	doi = {10.1145/277650.277715},
	acmid = {277715},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {distributed object systems, garbage collection, reference tracking, storage management},
} 

@inproceedings{Brandt2014,
	booktitle={Proceedings of the 13th International Symposium on Memory Management},
	status = {other},
	title={Concurrent, Parallel Garbage Collection in Linear Time},
	author={Brandt, Steven R. and Krishnan, Hari and Sharma, Gokarna and Busch, Costas},
	organization={ACM},
	year={2014},
}

@article{Abu,
	author = {Abdullahi, Saleh E. and Ringwood, Graem A.},
	title = {Garbage Collecting the Internet: A Survey of Distributed Garbage Collection},
	journal = {ACM Comput. Surv.},
	issue_date = {Sept. 1998},
	volume = {30},
	number = {3},
	month = sep,
	year = {1998},
	issn = {0360-0300},
	pages = {330--373},
	numpages = {44},
	url = {http://doi.acm.org/10.1145/292469.292471},
	doi = {10.1145/292469.292471},
	acmid = {292471},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {automatic storage reclamation, distributed, distributed file systems, distributed memories, distributed object-oriented management, memory management, network communication, object-oriented databases, reference counting},
} 

@book{congest,
	author = {Peleg, David},
	title = {Distributed Computing: A Locality-sensitive Approach},
	year = {2000},
	isbn = {0-89871-464-8},
	publisher = {Society for Industrial and Applied Mathematics},
	address = {Philadelphia, PA, USA},
} 


@INPROCEEDINGS{Ladin, 
author={Ladin, R. and Liskov, B.}, 
booktitle={Distributed Computing Systems, 1992., Proceedings of the 12th International Conference on}, 
title={Garbage collection of a distributed heap}, 
year={1992}, 
month={Jun}, 
pages={708-715}, 
keywords={data structures;storage management;distributed heap;fault-tolerant method;garbage collection;inaccessible cycles;intercomputer references;storage requirements;Access protocols;Availability;Clocks;Communication networks;Computer crashes;Computer networks;Counting circuits;Distributed computing;Object detection;Synchronization}, 
doi={10.1109/ICDCS.1992.235116},}
@article{Maheshwari1997b,
year={1997},
journal={Distrib. Comput.},
volume={10},
number={2},
title={Collecting cyclic distributed garbage by controlled migration},
publisher={Springer-Verlag},
keywords={Key words:√¢‚Ç¨‚ÄöDistributed garbage collection; Cyclic garbage; Migration},
author={Maheshwari, Umesh and Liskov, Barbara},
pages={79-86},
language={English},
}

@inproceedings{Wang2010,
 author = {Wang, Wei-Jen and Varela, Carlos and Hsu, Fu-Hau and Tang, Cheng-Hsien},
 title = {Actor garbage collection using vertex-preserving actor-to-object graph transformations},
 booktitle = {GPC},
 year = {2010},
 location = {Hualien, Taiwan},
 pages = {244--255},
 numpages = {12},
 keywords = {active objects, actors, garbage collection, program transformation},
}

@article{Shavit1997,
year={1997},
journal={Distrib. Comput.},
volume={10},
number={2},
title={Software transactional memory},
keywords={Key words:√¢‚Ç¨‚ÄöMultiprocessor synchronization; Lock-free; Transactional memory; Distributed shared memory},
author={Shavit, Nir and Touitou, Dan},
pages={99-116},
language={English}
}

@inproceedings{Schoettner2006,
 author = {Schoettner, M. and Goeckelmann, R. and Frenz, S. and Fakler, M. and Schulthess, P.},
 title = {Incremental distributed garbage collection using reverse reference tracking},
 booktitle = {Proceedings of the 12th international conference on Parallel Processing (Euro-Par)},
 year = {2006},
 location = {Dresden, Germany},
 pages = {571--581},
 numpages = {11},
}


@inproceedings{kaiser2009parallex,
  title={Parallex an advanced parallel execution model for scaling-impaired applications},
  author={Kaiser, Hartmut and Brodowicz, Maciek and Sterling, Thomas},
  booktitle={ICPPW},
  pages={394--401},
  year={2009},
}

@book{kale1993charm++,
  title={CHARM++: a portable concurrent object oriented system based on C++},
  author={Kale, Laxmikant V and Krishnan, Sanjeev},
  volume={28},
  number={10},
  year={1993},
}

@inproceedings{lauderdale2012towards,
  title={Towards a codelet-based runtime for exascale computing: position paper},
  author={Lauderdale, Christopher and Khan, Rishi},
  booktitle={EXADAPT},
  pages={21--26},
  year={2012},
}

@inproceedings{berzins2010uintah,
  title={Uintah: a scalable framework for hazard analysis},
  author={Berzins, Martin and Luitjens, Justin and Meng, Qingyu and Harman, Todd and Wight, Charles A and Peterson, Joseph R},
  booktitle={TG},
  pages={3.1--3.8},
  year={2010},
}

@inproceedings{nieplocha1994global,
  title={Global Arrays: A portable shared-memory programming model for distributed memory computers},
  author={Nieplocha, Jaroslaw and Harrison, Robert J and Littlefield, Richard J},
  booktitle={SC},
  pages={340--349},
  year={1994},
}

@article{Printezis:2000,
 author = {Printezis, Tony and Detlefs, David},
 title = {A generational mostly-concurrent garbage collector},
 journal = {SIGPLAN Not.},
 volume = {36},
 number = {1},
 year = {2000},
 pages = {143--154},
 numpages = {12},
 acmid = {362480},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@MISC{refer,
  howpublished = {\url{http://docs.oracle.com/javase/1.4.2/docs/api/java/lang/ref/Reference.html}},
}

@MISC{realtime,
  howpublished = {\url{http://www.ibm.com/developerworks/java/library/j-rtj4/index.html}},
}

@MISC{arc,
  howpublished = {\url{https://developer.apple.com/library/ios/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/ProgrammingWithObjectiveC.pdf}},
}


@article{Bacon2003,
 author = {Bacon, David F. and Cheng, Perry and Rajan, V. T.},
 title = {A real-time garbage collector with low overhead and consistent utilization},
 journal = {SIGPLAN Not.},
 volume = {38},
 number = {1},
 year = {2003},
 pages = {285--298},
 numpages = {14},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {defragmentation, read barrier, real-time scheduling, utilization},
}



@article{Sankaran:1994,
 author = {Sankaran, Nandakumar},
 title = {A bibliography on garbage collection and related topics},
 journal = {SIGPLAN Not.},
 volume = {29},
 number = {9},
 year = {1994},
 issn = {0362-1340},
 pages = {149--158},
 numpages = {10},
}


@article{Lins:1992:CRC,
 author = {Lins, Rafael D.},
 title = {Cyclic reference counting with lazy mark-scan},
 journal = {Inf. Process. Lett.},
 volume = {44},
 number = {4},
 year = {1992},
 pages = {215--220},
 numpages = {6},
 acmid = {152563},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {compilers, functional programming, garbage collection},
}

@article{Lins:2002:EAC,
 author = {Lins, Rafael Dueire},
 title = {An efficient algorithm for cyclic reference counting},
 journal = {Inf. Process. Lett.},
 volume = {83},
 number = {3},
 year = {2002},
 pages = {145--150},
 numpages = {6},
 acmid = {605119},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {cyclic graphs, garbage collection, memory management, reference counting},
}




@article{Bacon:2001:JWC,
 author = {Bacon, David F. and Attanasio, Clement R. and Lee, Han B. and Rajan, V. T. and Smith, Stephen},
 title = {Java without the coffee breaks: a nonintrusive multiprocessor garbage collector},
 journal = {SIGPLAN Not.},
 volume = {36},
 number = {5},
 year = {2001},
 pages = {92--103},
 numpages = {12},
 acmid = {378819},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@misc{url:refimpl,
	author = {Brandt, Steven R and Krishnan, Hari},
	title = {MultiThreaded Garbage Collector},
	year = {2013},
	publisher = {GitHub},
	journal = {GitHub repository},
	howpublished = {\url{https://github.com/stevenrbrandt/MultiThreadBrownbridge}},
	
}


@inproceedings{Shahriyar:2012,
 author = {Shahriyar, Rifat and Blackburn, Stephen M. and Frampton, Daniel},
 title = {Down for the Count?  Getting Reference Counting Back in the Ring},
 booktitle = {ISMM},
 year = {2012},
 location = {Beijing, China},
 pages = {73--84},
 numpages = {12},
}

@PHDTHESIS{Frampton2010,
  AUTHOR =       {D. Frampton},
  TITLE =        {Garbage Collection and the Case for High-level Low- level Programming},
  SCHOOL =       {Australian National University},
  YEAR =         {2010},
  month =        {June},
}

@article {Christopher1984,
author = {Christopher, Thomas W.},
title = {Reference count garbage collection},
journal = {Software: Practice and Experience},
volume = {14},
number = {6},
publisher = {John Wiley & Sons, Ltd.},
pages = {503--507},
keywords = {List processing, Garbage collection, Reference counts},
year = {1984},
}
@inproceedings{TranconyWidemann:2008:RGC:1375634.1375645,
 author = {Tranc\'{o}n y Widemann, Baltasar},
 title = {A Reference-counting Garbage Collection Algorithmfor Cyclical Functional Programming},
 booktitle = {Proceedings of the 7th International Symposium on Memory Management},
 series = {ISMM '08},
 year = {2008},
 isbn = {978-1-60558-134-7},
 location = {Tucson, AZ, USA},
 pages = {71--80},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1375634.1375645},
 doi = {10.1145/1375634.1375645},
 acmid = {1375645},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {cycles, functional programming, garbage collection, memory management, reference counting},
}
@article{mccarthy,
 author = {McCarthy, John},
 title = {Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part I},
 journal = {Commun. ACM},
 issue_date = {April 1960},
 volume = {3},
 number = {4},
 month = apr,
 year = {1960},
 issn = {0001-0782},
 pages = {184--195},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/367177.367199},
 doi = {10.1145/367177.367199},
 acmid = {367199},
 publisher = {ACM},
 address = {New York, NY, USA},
}




MASTERSTHESIS{Salkild1987,
  AUTHOR =       {Salkild, J.D.},
  TITLE =        {Implementation and Analysis of two Reference Counting Algorithms},
  SCHOOL =       {University College},
  YEAR =         {1987},
  type =         {Master Thesis},
  address =      {London},
}

UNPUBLISHED{Hughes1987,
  AUTHOR =       {Hughes, R.J.M.},
  TITLE =        {Managing reduction graphs with reference counts},
  NOTE =         {Departmental Research Report CSC/87/R2},
  year =         {1987},
  month =        {March},
  source =       {University of Glasgow},
}

book{Pepels1988,
  title={A Cyclic Reference Counting Algorithm and Its Proof},
  author={Pepels, E.J.H. and Plasmeijer, M.J. and van Eekelen, C.J.D. and Eekelen, M.C.J.D.},
  series={Internal report 88-10},
  year={1988},
  publisher={Department of Informatics, Faculty of Science, University of Nijmegen},
}


@techreport{Butters,
	title = {Total Cost of Ownership: A Comparison of {C}/{C++} and {J}ava},
	author = {Albin M. Butters},
	institution = {Evans Data Corporation},
	month = jun,
	year = 2007,
	url = {http://costkiller.net/tribune/Tribu-PDF/Total-Cost-of-Ownership-A-Comparison-of-C-Cplusplus-and-Java.pdf},
	comment = { Surveyed 350 developers from around the world.
	Harder to find skilled C/C++ developers than skilled Java developers.
	One average, developers have more years of experience with C/C++ than with Java.
	Clear majority (at least 60\%) believe Java allows applications to be rolled out
	quicker, and that C/C++ is more difficult to maintain.
	Applications written with Java entail easier post-production maintenance than those written with C/C++
	C/C++ applications take 52\% longer to develop and 44\% longer to maintain.
	C/C++ is more expensive than Java is based on actual experience paying for licenses, support, training, updates, and so forth. }
}


@article{Axford1990,
author = {Axford, T. H.},
title = {Reference Counting of Cyclic Graphs for Functional Programs},
volume = {33},
number = {5},
pages = {466-470},
year = {1990},
abstract ={A simple method of reference counting applicable to graphs of functional language programs is described. The graph contains strong and weak pointers, but only the strong pointers are counted in the reference counts and by the graph deletion algorithms.It is shown that graphs of functional programs can be constructed in such a way that the sub-graphs got by removing all weak pointers is connected and acyclic. The weak pointers are used only for those recursive references which create cycles in an otherwise acyclic graph. Explicit recursive definitions of functions and data structures may be represented in the graph.The usual graph reduction rules can be implemented so that they do not destroy the required properties of the graph: the sub-graph of strong pointers always remains connected and acyclic. Thus, simple reference counting can be used safely with cyclic graphs of functional programsThis method of storage management has the advantage that is incurs little overhead in either storage space or execution time of beta reduction. Nor is there any excessive increase in the complexity of the algorithm needed for graph reduction. It is less suitable, however, for combinator and supercombinator reduction.},
journal = {The Computer Journal}
}

article{Friedman1979,
  author    = {Daniel P. Friedman and
               David S. Wise},
  title     = {Reference Counting Can Manage the Circular Environments
               of Mutual Recursion},
  journal   = {Inf. Process. Lett.},
  volume    = {8},
  number    = {1},
  year      = {1979},
  pages     = {41-45},
}

book{Jones1996,
 author = {Jones, Richard and Lins, Rafael},
 title = {Garbage collection: algorithms for automatic dynamic memory management},
 year = {1996},
 isbn = {0-471-94148-4},
 publisher = {John Wiley \& Sons, Inc.},
 address = {New York, NY, USA},
}

@book{Jones2011,
 author = {Jones, Richard and Hosking, Antony and Moss, Eliot},
 title = {The Garbage Collection Handbook: The Art of Automatic Memory Management},
 year = {2011},
 isbn = {1420082795, 9781420082791},
 edition = {1st},
 publisher = {Chapman \& Hall/CRC},
}


@incollection{Lins2006,
year={2006},
booktitle={Graph Transformations},
volume={4178},
series={Lecture Notes in Computer Science},
editor={Corradini, Andrea and Ehrig, Hartmut and Montanari, Ugo and Ribeiro, Leila and Rozenberg, Grzegorz},
title={New Algorithms and Applications of Cyclic Reference Counting},
keywords={cyclic graphs; reference counting; webpage management; process management},
author={Lins, Rafael Dueire},
pages={15-29},
}

article{Lins2008,
title = "Cyclic reference counting",
journal = "Inf. Process. Lett.",
volume = "109",
number = "1",
pages = "71 - 78",
year = "2008",
note = "",
author = "Rafael Dueire Lins",
}

@article{Abdullahi1998,
 author = {Abdullahi, Saleh E. and Ringwood, Graem A.},
 title = {Garbage collecting the Internet: a survey of distributed garbage collection},
 journal = {ACM Comput. Surv.},
 volume = {30},
 number = {3},
 year = {1998},
 pages = {330--373},
 numpages = {44},
 keywords = {automatic storage reclamation, distributed, distributed file systems, distributed memories, distributed object-oriented management, memory management, network communication, object-oriented databases, reference counting},
}

article{Paz2007,
 author = {Paz, Harel and Bacon, David F. and Kolodner, Elliot K. and Petrank, Erez and Rajan, V. T.},
 title = {An efficient on-the-fly cycle collection},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {29},
 number = {4},
 year = {2007},
 articleno = {20},
 keywords = {Programming languages, concurrent cycle collection, garbage collection, memory management, reference counting, runtime systems},
}

@inproceedings{Plainfosse1995,
 author = {Plainfoss{\'e}, David and Shapiro, Marc},
 title = {A Survey of Distributed Garbage Collection Techniques},
 booktitle = {Proceedings of the International Workshop on Memory Management (IWMM)},
 year = {1995},
 pages = {211--249},
 numpages = {39},
}

@MISC{Chase1987,
    author = {David R. Chase},
    title = {Brief Survey of Garbage Collection Algorithms},
    year = {1987},
}

@inproceedings{Wilson1992,
 author = {Wilson, Paul R.},
 title = {Uniprocessor Garbage Collection Techniques},
 booktitle = {IWMM},
 year = {1992},
 pages = {1--42},
 numpages = {42},
}

inproceedings{Bacon2001,
 author = {Bacon, David F. and Rajan, V. T.},
 title = {Concurrent Cycle Collection in Reference Counted Systems},
 booktitle = {ECOOP},
 year = {2001},
 pages = {207--235},
 numpages = {29},
}

article{Collins1960,
 author = {Collins, George E.},
 title = {A method for overlapping and erasure of lists},
 journal = {Commun. ACM},
 volume = {3},
 number = {12},
 year = {1960},
 pages = {655--657},
 numpages = {3},
}

article{McCarthy1960,
 author = {McCarthy, John},
 title = {Recursive functions of symbolic expressions and their computation by machine, Part I},
 journal = {Commun. ACM},
 volume = {3},
 number = {4},
 year = {1960},
 pages = {184--195},
 numpages = {12},
}

article{Levanoni2006,
 author = {Levanoni, Yossi and Petrank, Erez},
 title = {An on-the-fly reference-counting garbage collector for java},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {28},
 number = {1},
 year = {2006},
 pages = {1--69},
 numpages = {69},
 keywords = {Programming languages, garbage collection, memory management, reference-counting},
}

article{McBeth1963,
 author = {McBeth, J. Harold},
 title = {Letters to the editor: on the reference counter method},
 journal = {Commun. ACM},
 volume = {6},
 number = {9},
 year = {1963},
 pages = {575},
}

article{Bobrow1980,
 author = {Bobrow, Daniel G.},
 title = {Managing Reentrant Structures Using Reference Counts},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {2},
 number = {3},
 year = {1980},
 pages = {269--273},
 numpages = {5},
}

inproceedings{Caromel2007,
 author = {Caromel, Denis and Chazarain, Guillaume and Henrio, Ludovic},
 title = {Garbage collecting the grid: a complete DGC for activities},
 booktitle = {Proceedings of the ACM/IFIP/USENIX 2007 International Conference on Middleware (Middleware)},
 year = {2007},
 location = {Newport Beach, California},
 pages = {164--183},
 numpages = {20},
 keywords = {cycle detection, distributed garbage collection, grid computing},
}

@article{Cohen1967,
year={1967},
journal={BIT Numerical Mathematics},
volume={7},
number={1},
title={Remarks on garbage collection using a two-level storage},
publisher={Kluwer Academic Publishers},
keywords={Storage administration; compiler; list},
author={Cohen, Jacques and Trilling, Laurent},
pages={22-30},
language={English},
}

@incollection{Bevan1987,
year={1987},
booktitle={PARLE Parallel Architectures and Languages Europe},
volume={259},
series={Lecture Notes in Computer Science},
editor={Bakker, J.W. and Nijman, A.J. and Treleaven, P.C.},
title={Distributed garbage collection using reference counting},
author={Bevan, DI},
pages={176-187}
}

@inproceedings{Shapiro1999,
 author = {Shapiro, Marc and Fessant, Fabrice Le and Ferreira, Paulo},
 title = {Recent Advances in Distributed Garbage Collection},
 booktitle = {Advances in Distributed Systems, Advanced Distributed Computing: From Algorithms to Systems},
 year = {1999},
 pages = {104--126},
 numpages = {23},
}

@article{Kafura1995,
 author = {Kafura, Dennis and Mukherji, Manibrata and Washabaugh, Douglas M.},
 title = {Concurrent and Distributed Garbage Collection of Active Objects},
 journal = {IEEE Trans. Parallel Distrib. Syst.},
 volume = {6},
 number = {4},
 year = {1995},
 pages = {337--350},
 numpages = {14},
}

@article{LeFessant1998,
 author = {Le Fessant, Fabrice and Piumarta, Ian and Shapiro, Marc},
 title = {An implementation of complete, asynchronous, distributed garbage collection},
 journal = {SIGPLAN Not.},
 volume = {33},
 number = {5},
 year = {1998},
 pages = {152--161},
 numpages = {10},
 keywords = {distributed object systems, garbage collection, reference tracking, storage management},
}

@inproceedings{Zigman2000,
 author = {Zigman, John N. and Blackburn, Stephen and Moss, J. Eliot B.},
 title = {TMOS: A Transactional Garbage Collector},
 booktitle = {Revised Papers from the 9th International Workshop on Persistent Object Systems(POS)},
 year = {2001},
 pages = {138--156},
 numpages = {19},
}

@article{Blackburn2001,
 author = {Blackburn, Stephen M. and Hudson, Richard L. and Morrison, Ron and Moss, J. Eliot B. and Munro, David S. and Zigman, John},
 title = {Starting with termination: a methodology for building distributed garbage collection algorithms},
 journal = {Aust. Comput. Sci. Commun.},
 volume = {23},
 number = {1},
 year = {2001},
 pages = {20--28},
 numpages = {9},
}

@inproceedings{McGachey2008,
 author = {McGachey, Phil and Adl-Tabatabai, Ali-Reza and Hudson, Richard L. and Menon, Vijay and Saha, Bratin and Shpeisman, Tatiana},
 title = {Concurrent GC leveraging transactional memory},
 booktitle = {PPoPP},
 year = {2008},
 location = {Salt Lake City, UT, USA},
 pages = {217--226},
 numpages = {10},
 keywords = {compiler optimizations, concurrent garbage collection, strong atomicity, transactional integrity, transactional memory, virtual machines},
}

article{Huelsbergen1998,
 author = {Huelsbergen, Lorenz and Winterbottom, Phil},
 title = {Very concurrent mark-\&-sweep garbage collection without fine-grain synchronization},
 journal = {SIGPLAN Not.},
 volume = {34},
 number = {3},
 year = {1998},
 pages = {166--175},
 numpages = {10},
}

article{Derbyshire1990,
 author = {Derbyshire, Margaret H.},
 title = {Mark scan garbage collection on a distributed architecture},
 journal = {Lisp Symb. Comput.},
 volume = {3},
 number = {2},
 year = {1990},
 pages = {135--170},
 numpages = {36},
}

article{Barabash2005,
 author = {Barabash, Katherine and Ben-Yitzhak, Ori and Goft, Irit and Kolodner, Elliot K. and Leikehman, Victor and Ossia, Yoav and Owshanko, Avi and Petrank, Erez},
 title = {A parallel, incremental, mostly concurrent garbage collector for servers},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {27},
 number = {6},
 year = {2005},
 pages = {1097--1146},
 numpages = {50},
 keywords = {Garbage collection, JVM, concurrent garbage collection},
}

article{Pizlo2008,
 author = {Pizlo, Filip and Petrank, Erez and Steensgaard, Bjarne},
 title = {A study of concurrent real-time garbage collectors},
 journal = {SIGPLAN Not.},
 volume = {43},
 number = {6},
 year = {2008},
 pages = {33--44},
 numpages = {12},
 keywords = {concurrent garbage collection, garbage collection, lock-free computation, memory management, real-time},
}

inproceedings{Maheshwari1997,
 author = {Maheshwari, Umesh and Liskov, Barbara},
 title = {Collecting distributed garbage cycles by back tracing},
 booktitle = {Proceedings of the sixteenth annual ACM symposium on Principles of distributed computing (PODC)},
 year = {1997},
 location = {Santa Barbara, California, USA},
 pages = {239--248},
 numpages = {10},
}

inproceedings{Rodrigues1998,
 author = {Rodrigues, Helena and Jones, Richard},
 title = {Cyclic Distributed Garbage Collection with Group Merger},
 booktitle = {Proceedings of the 12th European Conference on Object-Oriented Programming (ECOOP)},
 year = {1998},
 pages = {260--284},
 numpages = {25},
}

misc{bejar1996,
  author = {Arturo Bejar},
  title = {The {Electric Communities} Distributed Garbage Collector},
  year = 1996,
  note = {{\tt http://www.crockford.com/ec/dgc.html}},
  url = "http://www.crockford.com/ec/dgc.html",
}

inproceedings{Ryu2003,
 author = {Ryu, Sung-Wook and Im, Eul Gyu and Neuman, B. Clifford},
 title = {Distributed Garbage Collection by Timeouts and Backward Inquiry},
 booktitle = {Proceedings of the 27th Annual International Conference on Computer Software and Applications (COMPSAC)},
 year = {2003},
 pages = {426--432},
 keywords = {Distributed Garbage Collection, Distributedobjects, Cyclic Garbage, Timeouts, Back-Tracing},
}

@MISC{terracota,
  note = {{\tt http://terracotta.org/documentation/}},
  source = {http://terracotta.org/documentation/bigmemorymax/best-practices},
}

inproceedings{Veiga2005,
 author = {Veiga, Luis and Ferreira, Paulo},
 title = {Asynchronous Complete Distributed Garbage Collection},
 booktitle = {IPDPS},
 year = {2005},
 pages = {24.1--24.10},
}

inproceedings{Wang2006,
 author = {Wang, Wei-Jen and Varela, Carlos A.},
 title = {Distributed garbage collection for mobile actor systems: the pseudo root approach},
 booktitle = {Proceedings of the First international conference on Advances in Grid and Pervasive Computing (GPC)},
 year = {2006},
 location = {Taichung, Taiwan},
 pages = {360--372},
 numpages = {13},
}

article{Maheshwari1997b,
year={1997},
journal={Distrib. Comput.},
volume={10},
number={2},
title={Collecting cyclic distributed garbage by controlled migration},
publisher={Springer-Verlag},
keywords={Key words:‚ÄÇDistributed garbage collection; Cyclic garbage; Migration},
author={Maheshwari, Umesh and Liskov, Barbara},
pages={79-86},
language={English},
}

inproceedings{Wang2010,
 author = {Wang, Wei-Jen and Varela, Carlos and Hsu, Fu-Hau and Tang, Cheng-Hsien},
 title = {Actor garbage collection using vertex-preserving actor-to-object graph transformations},
 booktitle = {GPC},
 year = {2010},
 location = {Hualien, Taiwan},
 pages = {244--255},
 numpages = {12},
 keywords = {active objects, actors, garbage collection, program transformation},
}

article{Shavit1997,
year={1997},
journal={Distrib. Comput.},
volume={10},
number={2},
title={Software transactional memory},
keywords={Key words:‚ÄÇMultiprocessor synchronization; Lock-free; Transactional memory; Distributed shared memory},
author={Shavit, Nir and Touitou, Dan},
pages={99-116},
language={English}
}

inproceedings{Schoettner2006,
 author = {Schoettner, M. and Goeckelmann, R. and Frenz, S. and Fakler, M. and Schulthess, P.},
 title = {Incremental distributed garbage collection using reverse reference tracking},
 booktitle = {Proceedings of the 12th international conference on Parallel Processing (Euro-Par)},
 year = {2006},
 location = {Dresden, Germany},
 pages = {571--581},
 numpages = {11},
}


inproceedings{kaiser2009parallex,
  title={Parallex an advanced parallel execution model for scaling-impaired applications},
  author={Kaiser, Hartmut and Brodowicz, Maciek and Sterling, Thomas},
  booktitle={ICPPW},
  pages={394--401},
  year={2009},
}

book{kale1993charm++,
  title={CHARM++: a portable concurrent object oriented system based on C++},
  author={Kale, Laxmikant V and Krishnan, Sanjeev},
  volume={28},
  number={10},
  year={1993},
}

inproceedings{lauderdale2012towards,
  title={Towards a codelet-based runtime for exascale computing: position paper},
  author={Lauderdale, Christopher and Khan, Rishi},
  booktitle={EXADAPT},
  pages={21--26},
  year={2012},
}

inproceedings{berzins2010uintah,
  title={Uintah: a scalable framework for hazard analysis},
  author={Berzins, Martin and Luitjens, Justin and Meng, Qingyu and Harman, Todd and Wight, Charles A and Peterson, Joseph R},
  booktitle={TG},
  pages={3.1--3.8},
  year={2010},
}

inproceedings{nieplocha1994global,
  title={Global Arrays: A portable shared-memory programming model for distributed memory computers},
  author={Nieplocha, Jaroslaw and Harrison, Robert J and Littlefield, Richard J},
  booktitle={SC},
  pages={340--349},
  year={1994},
}

article{Printezis:2000,
 author = {Printezis, Tony and Detlefs, David},
 title = {A generational mostly-concurrent garbage collector},
 journal = {SIGPLAN Not.},
 volume = {36},
 number = {1},
 year = {2000},
 pages = {143--154},
 numpages = {12},
 acmid = {362480},
 publisher = {ACM},
 address = {New York, NY, USA},
}

MISC{refer,
  howpublished = {\url{http://docs.oracle.com/javase/1.4.2/docs/api/java/lang/ref/Reference.html}},
}

MISC{realtime,
  howpublished = {\url{http://www.ibm.com/developerworks/java/library/j-rtj4/index.html}},
}

MISC{arc,
  howpublished = {\url{https://developer.apple.com/library/ios/documentation/cocoa/conceptual/ProgrammingWithObjectiveC/ProgrammingWithObjectiveC.pdf}},
}


article{Bacon2003,
 author = {Bacon, David F. and Cheng, Perry and Rajan, V. T.},
 title = {A real-time garbage collector with low overhead and consistent utilization},
 journal = {SIGPLAN Not.},
 volume = {38},
 number = {1},
 year = {2003},
 pages = {285--298},
 numpages = {14},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {defragmentation, read barrier, real-time scheduling, utilization},
}



article{Sankaran:1994,
 author = {Sankaran, Nandakumar},
 title = {A bibliography on garbage collection and related topics},
 journal = {SIGPLAN Not.},
 volume = {29},
 number = {9},
 year = {1994},
 issn = {0362-1340},
 pages = {149--158},
 numpages = {10},
}


article{Lins:1992:CRC,
 author = {Lins, Rafael D.},
 title = {Cyclic reference counting with lazy mark-scan},
 journal = {Inf. Process. Lett.},
 volume = {44},
 number = {4},
 year = {1992},
 pages = {215--220},
 numpages = {6},
 acmid = {152563},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {compilers, functional programming, garbage collection},
}

article{Lins:2002:EAC,
 author = {Lins, Rafael Dueire},
 title = {An efficient algorithm for cyclic reference counting},
 journal = {Inf. Process. Lett.},
 volume = {83},
 number = {3},
 year = {2002},
 pages = {145--150},
 numpages = {6},
 acmid = {605119},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {cyclic graphs, garbage collection, memory management, reference counting},
}




article{Bacon:2001:JWC,
 author = {Bacon, David F. and Attanasio, Clement R. and Lee, Han B. and Rajan, V. T. and Smith, Stephen},
 title = {Java without the coffee breaks: a nonintrusive multiprocessor garbage collector},
 journal = {SIGPLAN Not.},
 volume = {36},
 number = {5},
 year = {2001},
 pages = {92--103},
 numpages = {12},
 acmid = {378819},
 publisher = {ACM},
 address = {New York, NY, USA},
}

misc{url:refimpl,
        url = {https://github.com/stevenrbrandt/MultiThreadBrownbridge},
}

inproceedings{Shahriyar:2012,
 author = {Shahriyar, Rifat and Blackburn, Stephen M. and Frampton, Daniel},
 title = {Down for the Count?  Getting Reference Counting Back in the Ring},
 booktitle = {ISMM},
 year = {2012},
 location = {Beijing, China},
 pages = {73--84},
 numpages = {12},
}

PHDTHESIS{Frampton2010,
  AUTHOR =       {D. Frampton},
  TITLE =        {Garbage Collection and the Case for High-level Low- level Programming},
  SCHOOL =       {Australian National University},
  YEAR =         {2010},
  month =        {June},
}

article {Christopher1984,
author = {Christopher, Thomas W.},
title = {Reference count garbage collection},
journal = {Software: Practice and Experience},
volume = {14},
number = {6},
publisher = {John Wiley & Sons, Ltd.},
pages = {503--507},
keywords = {List processing, Garbage collection, Reference counts},
year = {1984},
}

@inproceedings{liskov97,
	author = {Maheshwari, Umesh and Liskov, Barbara},
	title = {Collecting Distributed Garbage Cycles by Back Tracing},
	booktitle = {Proceedings of the Sixteenth Annual ACM Symposium on Principles of Distributed Computing},
	series = {PODC '97},
	year = {1997},
	isbn = {0-89791-952-1},
	location = {Santa Barbara, California, USA},
	pages = {239--248},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/259380.259444},
	doi = {10.1145/259380.259444},
	acmid = {259444},
	publisher = {ACM},
	address = {New York, NY, USA},
} 

@article{liskov95,
	year={1997},
	issn={0178-2770},
	journal={Distributed Computing},
	volume={10},
	number={2},
	doi={10.1007/s004460050026},
	title={Collecting cyclic distributed garbage by controlled migration},
	url={http://dx.doi.org/10.1007/s004460050026},
	publisher={Springer-Verlag},
	keywords={Key words:‚ÄÇDistributed garbage collection; Cyclic garbage; Migration},
	author={Maheshwari, Umesh and Liskov, Barbara},
	pages={79-86},
	language={English}
}

@INPROCEEDINGS{Veiga, 
	author={Veiga, L. and Ferreira, P.}, 
	booktitle={Parallel and Distributed Processing Symposium, 2005. Proceedings. 19th IEEE International}, 
	title={Asynchronous Complete Distributed Garbage Collection}, 
	year={2005}, 
	month={April}, 
	pages={24a-24a}, 
	keywords={backtracking;distributed algorithms;mobile agents;storage management;DGC algorithms;OBIWAN platform;Rotor free source Microsoft .Net version;asynchronous complete distributed garbage collection;backtracking;central server;distributed tracing phases;global counters;mobile agents;object replication;remote invocation;synchronization;Algorithm design and analysis;Counting circuits;Data structures;Degradation;Detection algorithms;Detectors;Memory management;Mobile agents;Scalability;Yarn}, 
	doi={10.1109/IPDPS.2005.113},}
@inproceedings{LeFessant:2001,
	author = {Le Fessant, Fabrice},
	title = {Detecting Distributed Cycles of Garbage in Large-scale Systems},
	booktitle = {Proceedings of the Twentieth Annual ACM Symposium on Principles of Distributed Computing},
	series = {PODC '01},
	year = {2001},
	isbn = {1-58113-383-9},
	location = {Newport, Rhode Island, USA},
	pages = {200--209},
	numpages = {10},
	url = {http://doi.acm.org/10.1145/383962.384018},
	doi = {10.1145/383962.384018},
	acmid = {384018},
	publisher = {ACM},
	address = {New York, NY, USA},
	keywords = {cycles, distributed garbage collection, min-max marking, optimistic back-tracing, sub-generation},
} 

@inproceedings{shapiro95,
	author = {Plainfoss{\'e}, David and Shapiro, Marc},
	title = {A Survey of Distributed Garbage Collection Techniques},
	booktitle = {Proceedings of the International Workshop on Memory Management},
	series = {IWMM '95},
	year = {1995},
	isbn = {3-540-60368-9},
	pages = {211--249},
	numpages = {39},
	url = {http://dl.acm.org/citation.cfm?id=645647.664687},
	acmid = {664687},
	publisher = {Springer-Verlag},
	address = {London, UK, UK},
} 

incollection{
	year={2006},
	isbn={978-3-540-33809-3},
	booktitle={Advances in Grid and Pervasive Computing},
	volume={3947},
	series={Lecture Notes in Computer Science},
	editor={Chung, Yeh-Ching and Moreira, Jos√©E.},
	doi={10.1007/11745693_36},
	title={Distributed Garbage Collection for Mobile Actor Systems: The Pseudo Root Approach},
	url={http://dx.doi.org/10.1007/11745693_36},
	publisher={Springer Berlin Heidelberg},
	author={Wang, Wei-Jen and Varela, CarlosA.},
	pages={360-372},
	language={English}
}



